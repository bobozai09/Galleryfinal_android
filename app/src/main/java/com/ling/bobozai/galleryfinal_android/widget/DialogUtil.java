package com.ling.bobozai.galleryfinal_android.widget;import android.app.Activity;import android.app.Dialog;import android.content.Context;import android.content.DialogInterface;import android.support.annotation.NonNull;import android.support.v7.app.AlertDialog;import android.text.TextUtils;import android.view.View;import com.flyco.animation.BaseAnimatorSet;import com.flyco.animation.FallEnter.FallEnter;import com.flyco.animation.ZoomExit.ZoomOutExit;import com.flyco.dialog.listener.OnBtnClickL;import com.flyco.dialog.widget.MaterialDialog;import com.flyco.dialog.widget.NormalDialog;import cn.finalteam.galleryfinal.GalleryFinal;/** * Created by boboz on 2018/3/24. */public final class DialogUtil {    final static BaseAnimatorSet mBasIn = new FallEnter();    final static BaseAnimatorSet mBasOut = new ZoomOutExit();    public final static NormalDialog showCommDialog(final Context context, String msg) {        final NormalDialog dialog = createCommDialog(context, "温馨提示", msg);        dialog.show();        return dialog;    }    @NonNull    private static NormalDialog createCommDialog(Context context, String title, String msg) {        final NormalDialog dialog = new NormalDialog(context);        dialog.showAnim(mBasIn)                .dismissAnim(mBasOut)//                .widthScale(0.85f)//设置对话框的宽度//                .cornerRadius(5)//设置对话框四个角的弧度//                .dividerColor(Color.parseColor("#222222"))//                .bgColor(Color.parseColor("#383838"))                // 设置title                .isTitleShow(!TextUtils.isEmpty(title))                .title(title)                .style(NormalDialog.STYLE_TWO)//STYLE_TWO标题剧中                .titleTextSize(23)//单位：sp                //设置content                .content(msg)//                .contentGravity(Gravity.CENTER)//                .contentTextColor(Color.parseColor("#ffffff"))        //设置btn//                .btnNum(2)//                .btnText("left","right","middle")//                .btnTextSize(15.5f, 15.5f)//单位：sp//                .btnTextColor(Color.parseColor("#ffffff"), Color.parseColor("#ffffff"))//                .btnPressColor(Color.parseColor("#2B2B2B"))        ;//        dialog.setOnBtnClickL(new OnBtnClickL() {//            @Override//            public void onBtnClick() {//                //ToastUtil.showSingleToast("middle");//btnNum(1)时，默认为middle按钮显示//                dialog.dismiss();//            }//        });        dialog.setOnBtnClickL(                new OnBtnClickL() {                    @Override                    public void onBtnClick() {                        dialog.dismiss();                    }                },                new OnBtnClickL() {                    @Override                    public void onBtnClick() {                        dialog.dismiss();                    }                });        return dialog;    }    public final static MaterialDialog showMaterialFlycoDialog(final Context context, String msg) {        return showMaterialFlycoDialog(context, "温馨提示", msg);    }    public final static MaterialDialog showMaterialFlycoDialog(final Context context, String title, String msg) {        MaterialDialog dialog = createMaterialFlycoDialog(context, title, msg);        dialog.show();        return dialog;    }    @NonNull    public static MaterialDialog createMaterialFlycoDialog(Context context, String title, String msg) {        final MaterialDialog dialog = new MaterialDialog(context) {            @Override            public void dismiss() {                if (((Activity) mContext).isFinishing()) return;                super.dismiss();            }        };        dialog.showAnim(mBasIn)                .dismissAnim(mBasOut)//                .widthScale(0.85f)//设置对话框的宽度//                .cornerRadius(5)//设置对话框四个角的弧度//                .bgColor(Color.parseColor("#383838"))                // 设置title                .isTitleShow(!TextUtils.isEmpty(title))                .title(title)                .titleTextSize(23)//单位：sp                //设置content                .content(msg)//                .contentGravity(Gravity.CENTER)//                .contentTextColor(Color.parseColor("#ffffff"))        //设置btn//                .btnNum(2)//                .btnText("left","right","middle")//                .btnTextSize(15.5f, 15.5f)//单位：sp//                .btnTextColor(Color.parseColor("#ffffff"), Color.parseColor("#ffffff"))//                .btnPressColor(Color.parseColor("#2B2B2B"))        ;//        dialog.setOnBtnClickL(new OnBtnClickL() {//            @Override//            public void onBtnClick() {//                //ToastUtil.showSingleToast("middle");//btnNum(1)时，默认为middle按钮显示//                dialog.dismiss();//            }//        });        dialog.setOnBtnClickL(                new OnBtnClickL() {                    @Override                    public void onBtnClick() {                        dialog.dismiss();                    }                },                new OnBtnClickL() {                    @Override                    public void onBtnClick() {                        dialog.dismiss();                    }                });        return dialog;    }    /**     * 弹出loading对话框     *     * @param context     * @param tip     * @return     *///    public final static LoadingDialog showLoadingDialog(Context context, String tip) {//        LoadingDialog loadingDialog = new LoadingDialog(context, tip);//        loadingDialog.show();//        return loadingDialog;//    }//    public final static Dialog showTelDialog(Activity context, String msg, String tel) {//        return showTelDialog(context, msg, tel, null, null);//    }////    public final static Dialog showTelDialog(final Activity context, String msg, final String tel, String btn1Txt, String btn2Txt) {//        final NiftyDialogBuilder dialogBuilder = NiftyDialogBuilder.getInstance(context);//        dialogBuilder//                .withTitle(null)//                .withMessage(msg)//                .withDuration(300)//                .setCustomView(null, context)//                .isCancelableOnTouchOutside(true)//                .setDialogBgImage(R.color.dialog_bg)//                .withEffect(Effectstype.SlideBottom)//                .withRightBtnText(TextUtils.isEmpty(btn2Txt) ? "拨打电话" : btn2Txt)//                .withLeftBtnText(TextUtils.isEmpty(btn1Txt) ? "取消" : btn1Txt)//                .setRightBtnClick(new OnClickListenerWrapper() {//                    @Override//                    protected void onSingleClick(View v) {//                        context.startActivity(IntentsUtils.newDialNumberIntent(tel));//                    }//                })//                .show();//        return dialogBuilder;//    }    public final static void showCancelAppDialog(Context context) {        final MaterialDialog dialog = createMaterialFlycoDialog(context, null, "确定要退出应用吗？");        dialog.btnText("确定", "取消");//        dialog.showAnim(new Flash());        dialog.setOnBtnClickL(                new OnBtnClickL() {                    @Override                    public void onBtnClick() {                       // TapaiApplication.getInstance().quitAll(true);                        dialog.cancel();                    }                },                new OnBtnClickL() {                    @Override                    public void onBtnClick() {                        dialog.cancel();                    }                });        dialog.show();    }    /**     * 选择图片或者拍照对话框     *     * @param context     * @param count     * @param onSelPicResultCallback     * @return     */    public static Dialog showSelectPicDialog(Context context, int count, GalleryFinal.OnHanlderResultCallback onSelPicResultCallback) {        SelectPicDialog dialog = new SelectPicDialog(context);        dialog.setmOnSelPicResultCallback(onSelPicResultCallback);        dialog.setMaxSelectCount(count);        dialog.show();        return dialog;    }//    public final static boolean isShouldShowNonetTipDialog() {//        return TapaiApplication.isAppOnTop() && ActivityManager.getInstance().hasActivity()//                && ActivityManager.getInstance().getTopActivity().getClass() != SplashActivity.class;//    }//    public final static boolean showNoNetTipActvity() {//        if (!isShouldShowNonetTipDialog()) return false;////        Intent i = new Intent(TapaiApplication.getInstance(), NoNetTipActivity.class);//        i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);//        TapaiApplication.getInstance().startActivity(i);////        return true;//    }//    public final static boolean showNoNetTip(int duration) {//        if (!isShouldShowNonetTipDialog()) return false;//        ToastUtil.showSingleToast(R.drawable.no_network_tipicon, "没有网络连接，请稍后再试", duration);//        return true;//    }//    public final static Dialog showNoNetDialog(final Context context, int duration) {//        final MaterialDialog dialog = createMaterialFlycoDialog(context, "无网络提示", "没有网络连接，请稍后再试");//        dialog.showAnim(new Tada())//                .dismissAnim(null)////                .autoDismiss(true)//踏马的，设置了自动消失，那取消，去设置按钮点击就不会有反应了////                .autoDismissDelay(duration)//                .btnText("取消", "去设置")//                .setOnBtnClickL(//                        new OnBtnClickL() {//                            @Override//                            public void onBtnClick() {//                                dialog.cancel();//                            }//                        },//                        new OnBtnClickL() {//                            @Override//                            public void onBtnClick() {//                                context.startActivity(IntentsUtils.newNetWorkSettingIntent());//                                dialog.cancel();//                            }//                        });//        dialog.show();////        if (duration > 0) {//            AppUtils.runOnUIDelayed(new AppUtils.RemoveCallbackRunable() {//                @Override//                public void run() {//                    super.run();//                    if (dialog.isShowing()) dialog.dismiss();//                }//            }, 2000);//        }//        return dialog;//    }    //------------------support v7 Material风格的对话框------------------//    public static AlertDialog createMaterialDialog(Context context) {        AlertDialog.Builder builder = new AlertDialog.Builder(context);        return builder.create();    }    /**     * 显示Material风格的Dialog     *     * @param context     * @param title     * @param msg     * @param okBtn     * @param cancleBtn     * @param okListener     * @param cancleListener     * @return     */    public static AlertDialog showMaterialDialog(Context context, String title, String msg, String okBtn, String cancleBtn,                                                 DialogInterface.OnClickListener okListener, DialogInterface.OnClickListener cancleListener) {        AlertDialog.Builder builder = new AlertDialog.Builder(context);        builder.setTitle(title);        builder.setMessage(msg);        if (!TextUtils.isEmpty(okBtn) || okListener != null)            builder.setPositiveButton(TextUtils.isEmpty(okBtn) ? "确定" : okBtn, okListener);        if (!TextUtils.isEmpty(cancleBtn) || cancleListener != null)            builder.setNegativeButton(TextUtils.isEmpty(cancleBtn) ? "取消" : cancleBtn, cancleListener);        return builder.show();    }    public static void showReport(final Context mContex, String message) {        DialogUtil.showMaterialDialog(mContex, "禁言提示",                message,                "我知道了", "去学社区规定",                null, new DialogInterface.OnClickListener() {                    @Override                    public void onClick(DialogInterface dialog, int which) {                       // WebViewActivity.startPage(REPORT_H5_URL, mContex);                        dialog.dismiss();                    }                });    }    /**     * 显示Material风格的Dialog，默认显示取消、确定按钮     *     * @param context     * @param title     * @param msg     * @return     */    public static AlertDialog showMaterialDialog(Context context, String title, String msg) {        AlertDialog.Builder builder = new AlertDialog.Builder(context);        builder.setTitle(title);        builder.setMessage(msg);        builder.setNegativeButton("取消", null);        builder.setPositiveButton("确定", null);        return builder.show();    }    /**     * 显示Material风格的Dialog，默认显示取消、确定按钮     *     * @param context     * @param title     * @param contentView     * @return     */    public static AlertDialog showMaterialDialog(Context context, String title, View contentView) {        AlertDialog.Builder builder = new AlertDialog.Builder(context);        builder.setTitle(title);        builder.setView(contentView);        builder.setNegativeButton("取消", null);        builder.setPositiveButton("确定", null);        AlertDialog dialog = builder.show();//        contentView.setDialog(dialog);        return dialog;    }}