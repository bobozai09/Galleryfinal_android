package com.ling.bobozai.galleryfinal_android.widget;import android.Manifest;import android.app.Activity;import android.content.Context;import android.view.View;import android.widget.TextView;import android.widget.Toast;import com.flyco.dialog.widget.base.BottomBaseDialog;import com.ling.bobozai.galleryfinal_android.R;import com.ling.bobozai.galleryfinal_android.unitls.PicSelectorHelper;import butterknife.BindView;import butterknife.ButterKnife;import butterknife.OnClick;import cn.finalteam.galleryfinal.GalleryFinal;import static com.ling.bobozai.galleryfinal_android.widget.PermissUtils.PERMISSION_CODE_VIDEO;/** * Created by boboz on 2018/3/24. */public class SelectPicDialog extends BottomBaseDialog<SelectPicDialog> {  //  @BindView(R.id.selectPicTV)    TextView selectPicTV;  //  @BindView(R.id.takePicTV)    TextView takePicTV;  //  @BindView(R.id.cancelTV)    TextView cancelTV;    Context mContent;    private int maxSelectCount;    private GalleryFinal.OnHanlderResultCallback mOnSelPicResultCallback;    public void setmOnSelPicResultCallback(GalleryFinal.OnHanlderResultCallback mOnSelPicResultCallback) {        this.mOnSelPicResultCallback = mOnSelPicResultCallback;    }    public void setMaxSelectCount(int maxSelectCount) {        this.maxSelectCount = maxSelectCount;    }//    public LoadingDialog(Context context, View animateView) {//        super(context, animateView);//    }    public SelectPicDialog(Context context) {        super(context);        mContent = context;    }    @Override    public View onCreateView() {//        showAnim(new FlipVerticalSwingEnter());//        dismissAnim(null);        View inflate = View.inflate(mContext, R.layout.dialoglay_select_pictrue, null);        ButterKnife.bind(this, inflate);        return inflate;    }    @Override    public void setUiBeforShow() {        selectPicTV=findViewById(R.id.selectPicTV);        takePicTV=findViewById(R.id.takePicTV);        selectPicTV.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                PicSelectorHelper.goSelectPic(mContent, maxSelectCount, mOnSelPicResultCallback);                dismiss();            }        });    }//    @OnClick({R.id.selectPicTV, R.id.takePicTV, R.id.cancelTV})//    public void onViewClicked(View view) {//        switch (view.getId()) {//            case R.id.selectPicTV://                Toast.makeText(getContext(),"1234",Toast.LENGTH_SHORT).show();//                PicSelectorHelper.goSelectPic(mContent, maxSelectCount, mOnSelPicResultCallback);//                break;//            case R.id.takePicTV://                if (PermissUtils.hasPermissions(mContent, Manifest.permission.CAMERA)) {//                    PicSelectorHelper.goTakePicture(mContent, mOnSelPicResultCallback);//                } else {//                    PermissUtils.requestPermission((Activity) mContent, new String[]{Manifest.permission.CAMERA}, PERMISSION_CODE_VIDEO);//                }//                break;//        }//        dismiss();//    }    public void goTakePicture() {        PicSelectorHelper.goTakePicture(mContent, mOnSelPicResultCallback);    }    @Override    public void dismiss() {        if (((Activity) mContext).isFinishing()) return;        super.dismiss();    }}